[=]+ test session starts [=]+
platform [^\n]*
cachedir: [^\n]*
?(metadata: [^\n]*)?
rootdir: [^\n]*
plugins: [^\n]*
collecting ... [\s]*collected 1 item[\s]*

[^\n]*test_success_0_fail_1.py::test_fail_one_rank\[2\] FAILED

[=]+ FAILURES [=]+
[_]+ test_fail_one_rank\[2\] [_]+

[-]+ On rank 0 of 2 [-]+
comm = <mpi4py.MPI.Intracomm object at [^\n]*>

    @pytest_parallel.mark.parallel\(2\)
    def test_fail_one_rank\(comm\):
        if comm.Get_rank\(\) == 0:
>           assert 0
E           assert 0

[^\n]*test_success_0_fail_1.py:7: AssertionError
[=]+ short test summary info [=]+
FAILED [^\n]*test_success_0_fail_1.py::test_fail_one_rank\[2\][^\n]*
[=]+ 1 failed in [^\n]*s [=]+
